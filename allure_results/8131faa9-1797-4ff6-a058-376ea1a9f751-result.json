{"name": "Verify that when user add filling to basket - the filling count value is increased.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (359, 1088) is out of bounds of viewport dimensions (1670, 940)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:197:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:493:5\nassertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3097:11\n#assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:115:17\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:203:42", "trace": "self = <test_main_page.TestMainPage object at 0x102d4c260>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"82889de4-ed13-4158-ac3d-d67e8c034fd3\")>\n\n    @allure.title(\n        'Verify that when user add filling to basket - the filling count value is increased.')\n    def test_add_filling_to_basket_counter_increased(self, driver):\n        main_page = MainPage(driver)\n        main_page.wait_click_on_section(MainPageData.FILINGS_SECTION)\n        filling_counter_initial = int(main_page.check_filling_counter())\n>       main_page.add_filing_to_basket()\n\ntests/test_main_page.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:54: in add_filing_to_basket\n    self.drug_and_drop_element(self.locators.build_ingredient_locator(MainPageData.FILING_INGREDIENT_ID),\npages/base_page.py:79: in drug_and_drop_element\n    action.drag_and_drop(source, target).pause(timeout).perform()\n.venv/lib/python3.13/site-packages/selenium/webdriver/common/action_chains.py:94: in perform\n    self.w3c_actions.perform()\n.venv/lib/python3.13/site-packages/selenium/webdriver/common/actions/action_builder.py:170: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x102d9fac0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"Move target (359, 1088) is out of b...ys.mjs:115:17\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:203:42\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (359, 1088) is out of bounds of viewport dimensions (1670, 940)\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:197:5\nE       MoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:493:5\nE       assertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3097:11\nE       #assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:115:17\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:203:42\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: MoveTargetOutOfBoundsException"}, "steps": [{"name": "Click on \"'Начинки'\" section.", "status": "passed", "steps": [{"name": "Wait until the element is displayed: ('xpath', '//span[text()=\"Начинки\"]').", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//span[text()=\"Начинки\"]')"}], "start": 1744672976850, "stop": 1744672976870}, {"name": "Click on element: ('xpath', '//span[text()=\"Начинки\"]').", "status": "passed", "steps": [{"name": "Wait until the element is clickable: ('xpath', '//span[text()=\"Начинки\"]').", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//span[text()=\"Начинки\"]')"}], "start": 1744672976871, "stop": 1744672976883}], "parameters": [{"name": "locator", "value": "('xpath', '//span[text()=\"Начинки\"]')"}], "start": 1744672976870, "stop": 1744672977157}], "parameters": [{"name": "section", "value": "'Начинки'"}], "start": 1744672976850, "stop": 1744672977157}, {"name": "Check counter value of filling ingredient.", "status": "passed", "steps": [{"name": "Get text of the element: ('xpath', '//a[@href=\"/ingredient/61c0c5a71d1f82001bdaaa6f\"]//p[@class=\"counter_counter__num__3nue1\"]').", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//a[@href=\"/ingredient/61c0c5a71d1f82001bdaaa6f\"]//p[@class=\"counter_counter__num__3nue1\"]')"}], "start": 1744672977157, "stop": 1744672977168}], "start": 1744672977157, "stop": 1744672977168}, {"name": "Add filing to the basket.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (359, 1088) is out of bounds of viewport dimensions (1670, 940)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:197:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:493:5\nassertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3097:11\n#assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:115:17\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:203:42\n\n", "trace": "  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/pages/main_page.py\", line 54, in add_filing_to_basket\n    self.drug_and_drop_element(self.locators.build_ingredient_locator(MainPageData.FILING_INGREDIENT_ID),\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                               self.locators.BASKET)\n                               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/pages/base_page.py\", line 79, in drug_and_drop_element\n    action.drag_and_drop(source, target).pause(timeout).perform()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/selenium/webdriver/common/action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 170, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Drug-and-drop element.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (359, 1088) is out of bounds of viewport dimensions (1670, 940)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:197:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:493:5\nassertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3097:11\n#assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:115:17\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:203:42\n\n", "trace": "  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/pages/base_page.py\", line 79, in drug_and_drop_element\n    action.drag_and_drop(source, target).pause(timeout).perform()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/selenium/webdriver/common/action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 170, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/Users/polinaancevic/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator_source", "value": "('xpath', '//a[@href=\"/ingredient/61c0c5a71d1f82001bdaaa6f\"]')"}, {"name": "locator_target", "value": "('xpath', '//section[@class=\"BurgerConstructor_basket__29Cd7 mt-25 \"]')"}, {"name": "timeout", "value": "1"}], "start": 1744672977168, "stop": 1744672977174}], "start": 1744672977168, "stop": 1744672977179}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1744672976849, "stop": 1744672977179, "uuid": "aea2c1bc-bfd0-42bf-a467-c1c7dbcfc2e2", "historyId": "80929b48ab2594da331ddcb0bf069784", "testCaseId": "2a1b5b00432720dd12da36cb56fb7e17", "fullName": "tests.test_main_page.TestMainPage#test_add_filling_to_basket_counter_increased", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "ip-192-168-50-125.eu-north-1.compute.internal"}, {"name": "thread", "value": "25284-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}